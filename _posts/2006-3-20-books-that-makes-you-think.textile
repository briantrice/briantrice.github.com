--- 
wordpress_id: 97
layout: post
title: Books That Makes You Think
wordpress_url: http://jonasboner.com/?p=97
---
<h1>
Books That Makes You Think
</h1>
After <a href="http://jonasboner.com/2006/03/15/what-happened-to-computer-literature-that-makes-you-think-and-challenge-the-way-you-work/">my  rant</a> about the lack of computer literature that:
<blockquote>...makes you think and challenge the way you work.</blockquote>
I thought that I should provide a list of books that have made me start think about what I am doing and how I am doing it. Simply, books that have meant a lot to me.

This is by no means a complete list (I am sure I have missed a couple o gems) and the books are listed no particular order.

<a href="http://www.amazon.com/gp/product/020161622X/qid=1142550672/sr=2-1/ref=pd_bbs_b_2_1/104-6589157-2527103?s=books&v=glance&n=283155">The Pragmatic Programmer: From Journeyman to Master</a>
by Andrew Hunt, David Thomas

<a href="http://www.amazon.com/gp/product/0321125215/qid=1142058361/sr=2-1/ref=pd_bbs_b_2_1/103-2054129-4399023?s=books&v=glance&n=283155">Domain Driven Design</a>
by Eric Evans

<a href="http://www.amazon.com/gp/product/0321213351/qid=1142550742/sr=2-1/ref=pd_bbs_b_2_1/104-6589157-2527103?s=books&v=glance&n=283155">Refactoring to Patterns</a>
by Joshua Kerievsky

<a href="http://www.amazon.com/gp/product/0262610744/qid=1142552985/sr=1-1/ref=sr_1_1/104-6589157-2527103?s=books&v=glance&n=283155">The Art of the Metaobject Protocol</a>
by Gregor Kiczales

<a href="http://www.amazon.com/gp/product/0201310058/qid=1142553338/sr=2-1/ref=pd_bbs_b_2_1/104-6589157-2527103?s=books&v=glance&n=283155">Effective Java</a>
by Joshua Bloch

<a href="http://www.amazon.com/gp/product/0201485672/ref=cm_bg_d_7/104-6589157-2527103?s=books&v=glance&n=283155">Refactoring: Improving the Design of Existing Code</a>
by Martin Fowler

<a href="http://www.amazon.com/gp/product/0201310090/qid=1142553403/sr=2-1/ref=pd_bbs_b_2_1/104-6589157-2527103?s=books&v=glance&n=283155">Concurrent Programming in Java: Design Principles and Pattern</a>
by Doug Lea

<a href="http://www.amazon.com/gp/product/0735619670/ref=cm_bg_d_4/104-6589157-2527103?v=glance&n=283155">Code Complete</a>
by Steve McConnell

<a href="http://www.amazon.com/gp/product/0201657880/qid=1142549286/sr=2-1/ref=pd_bbs_b_2_1/104-6589157-2527103?s=books&v=glance&n=283155">Programming Pearls</a>
by Jon Bentley

<a href="http://www.amazon.com/gp/product/0201633612/ref=pd_sr_ec_ir_b/104-6589157-2527103?n=283155">Design Patterns: Elements of Reusable Object-Oriented Software</a>
by Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides

<a href="http://www.amazon.com/gp/product/0135974445/ref=pd_sr_ec_cs_b-koth-pa1/104-6589157-2527103?s=books&st=%2A&v=glance&n=283155">Agile Software Development, Principles, Patterns, and Practices
</a>by Robert C. Martin

<a href="http://www.amazon.com/gp/product/0321127420/qid=1142058328/sr=2-1/ref=pd_bbs_b_2_1/103-2054129-4399023?s=books&v=glance&n=283155">Patterns Of Enterprise Application Architecture</a>
by Martin Fowler

<a href="http://www.amazon.com/gp/product/0321278658/sr=8-2/qid=1142876835/ref=pd_bbs_2/104-0037309-3509544?%5Fencoding=UTF8">Extreme Programming Explained : Embrace Change</a>
by Kent Beck

<a href="http://www.amazon.com/gp/product/0201895420/sr=8-1/qid=1142878037/ref=pd_bbs_1/104-0037309-3509544?%5Fencoding=UTF8">Analysis Patterns : Reusable Object Models</a>
by Martin Fowler

I am always eager to read more good literature. What are your favourite books, which books have meant a lot to you and your career? If you have some suggestions, please comment.
